/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ClAddToCart {
        /**
          * Quantity
         */
        "quantity": number;
        /**
          * Sku code
         */
        "sku": string | undefined;
    }
    interface ClCartLink {
        /**
          * Target
         */
        "target": string;
    }
    interface ClPrice {
        /**
          * Sku code
         */
        "sku": string | undefined;
    }
    interface ClPriceAmount {
        "type": 'price' | 'compare-at';
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string | undefined;
        /**
          * The last name
         */
        "last": string | undefined;
        /**
          * The middle name
         */
        "middle": string | undefined;
    }
}
declare global {
    interface HTMLClAddToCartElement extends Components.ClAddToCart, HTMLStencilElement {
    }
    var HTMLClAddToCartElement: {
        prototype: HTMLClAddToCartElement;
        new (): HTMLClAddToCartElement;
    };
    interface HTMLClCartLinkElement extends Components.ClCartLink, HTMLStencilElement {
    }
    var HTMLClCartLinkElement: {
        prototype: HTMLClCartLinkElement;
        new (): HTMLClCartLinkElement;
    };
    interface HTMLClPriceElement extends Components.ClPrice, HTMLStencilElement {
    }
    var HTMLClPriceElement: {
        prototype: HTMLClPriceElement;
        new (): HTMLClPriceElement;
    };
    interface HTMLClPriceAmountElement extends Components.ClPriceAmount, HTMLStencilElement {
    }
    var HTMLClPriceAmountElement: {
        prototype: HTMLClPriceAmountElement;
        new (): HTMLClPriceAmountElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "cl-add-to-cart": HTMLClAddToCartElement;
        "cl-cart-link": HTMLClCartLinkElement;
        "cl-price": HTMLClPriceElement;
        "cl-price-amount": HTMLClPriceAmountElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface ClAddToCart {
        /**
          * Quantity
         */
        "quantity"?: number;
        /**
          * Sku code
         */
        "sku"?: string | undefined;
    }
    interface ClCartLink {
        /**
          * Target
         */
        "target"?: string;
    }
    interface ClPrice {
        /**
          * Sku code
         */
        "sku"?: string | undefined;
    }
    interface ClPriceAmount {
        "type"?: 'price' | 'compare-at';
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string | undefined;
        /**
          * The last name
         */
        "last"?: string | undefined;
        /**
          * The middle name
         */
        "middle"?: string | undefined;
    }
    interface IntrinsicElements {
        "cl-add-to-cart": ClAddToCart;
        "cl-cart-link": ClCartLink;
        "cl-price": ClPrice;
        "cl-price-amount": ClPriceAmount;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cl-add-to-cart": LocalJSX.ClAddToCart & JSXBase.HTMLAttributes<HTMLClAddToCartElement>;
            "cl-cart-link": LocalJSX.ClCartLink & JSXBase.HTMLAttributes<HTMLClCartLinkElement>;
            "cl-price": LocalJSX.ClPrice & JSXBase.HTMLAttributes<HTMLClPriceElement>;
            "cl-price-amount": LocalJSX.ClPriceAmount & JSXBase.HTMLAttributes<HTMLClPriceAmountElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
